"use strict";(globalThis.webpackChunk=globalThis.webpackChunk||[]).push([[7197],{96975:(e,t,n)=>{n.r(t),n.d(t,{default:()=>E});const a=JSON.parse('{"UU":"@ohif/extension-cornerstone-dicom-seg"}').UU,o=`${a}.sopClassHandlerModule.dicom-seg`;var s=n(86326),r=n(15871),i=n(89806),c=n(15327),d=n(4667),l=n(34279),g=n(5842);const m=["1.2.840.10008.5.1.4.1.1.66.4","1.2.840.10008.5.1.4.1.1.66.7"],S={};function u(e,t,n){const a=e[0],{StudyInstanceUID:s,SeriesInstanceUID:u,SOPInstanceUID:p,SeriesDescription:I,SeriesNumber:y,SeriesDate:D,SOPClassUID:v,wadoRoot:f,wadoUri:w,wadoUriRoot:b}=a,h={Modality:"SEG",loading:!1,isReconstructable:!1,displaySetInstanceUID:r.Wp.guid(),SeriesDescription:I,SeriesNumber:y,SeriesDate:D,SOPInstanceUID:p,SeriesInstanceUID:u,StudyInstanceUID:s,SOPClassHandlerId:o,SOPClassUID:v,referencedImages:null,referencedSeriesInstanceUID:null,referencedDisplaySetInstanceUID:null,isDerivedDisplaySet:!0,isLoaded:!1,isHydrated:!1,segments:{},sopClassUids:m,instance:a,instances:[a],wadoRoot:f,wadoUriRoot:b,wadoUri:w,isOverlayDisplaySet:!0,label:I||`${i.A.t("Series")} ${y} - ${i.A.t("SEG")}`},T=a.ReferencedSeriesSequence;if(!T)return void console.error("ReferencedSeriesSequence is missing for the SEG");const R=T[0]||T;h.referencedImages=a.ReferencedSeriesSequence.ReferencedInstanceSequence,h.referencedSeriesInstanceUID=R.SeriesInstanceUID;const{displaySetService:M}=t.services,U=M.getDisplaySetsForSeries(h.referencedSeriesInstanceUID)[0];if(U)h.referencedDisplaySetInstanceUID=U.displaySetInstanceUID,h.isReconstructable=U.isReconstructable;else{const{unsubscribe:e}=M.subscribe(M.EVENTS.DISPLAY_SETS_ADDED,({displaySetsAdded:t})=>{const n=t[0];n.SeriesInstanceUID===h.referencedSeriesInstanceUID&&(h.referencedDisplaySetInstanceUID=n.displaySetInstanceUID,h.isReconstructable=n.isReconstructable,e())})}return h.load=async({headers:e})=>await function(e,t,n,a){const{SOPInstanceUID:o}=e,{segmentationService:s}=t.services;if((e.loading||e.isLoaded)&&S[o]&&function(e){return d.segmentation.state.getSegmentation(e.displaySetInstanceUID)}(e))return S[o];return e.loading=!0,S[o]=new Promise(async(o,r)=>{if(!e.segments||0===Object.keys(e.segments).length)try{await async function({extensionManager:e,servicesManager:t,segDisplaySet:n,headers:a}){const o=e.getModuleEntry("@ohif/extension-cornerstone.utilityModule.common"),{segmentationService:s,uiNotificationService:r}=t.services,{dicomLoaderService:i}=o.exports,m=await i.findDicomDataPromise(n,null,a),S=t.services.displaySetService.getDisplaySetByUID(n.referencedDisplaySetInstanceUID);if(!S)throw new Error("referencedDisplaySet is missing for SEG");let{imageIds:u}=S;if(!u){const{images:e}=S;u=e.map(e=>e.imageId)}const p=.001;c.eventTarget.addEventListener(l.fX.s.SEGMENTATION_LOAD_PROGRESS,e=>{const{percentComplete:t}=e.detail;s._broadcastEvent(s.EVENTS.SEGMENT_LOADING_COMPLETE,{percentComplete:t})});const I=await l.ql.Cornerstone3D.Segmentation.createFromDICOMSegBuffer(u,m,{metadataProvider:c.metaData,tolerance:p});let y=!0;I.segMetadata.data.forEach((e,t)=>{var n;t>0&&(e.rgba=e.RecommendedDisplayCIELabValue,e.rgba?e.rgba=(n=e.rgba,g.Ay.data.Colors.dicomlab2RGB(n).map(e=>Math.round(255*e))):(y=!1,e.rgba=d.CONSTANTS.COLOR_LUT[t%d.CONSTANTS.COLOR_LUT.length]))}),y||r.show({title:"DICOM SEG import",message:"RecommendedDisplayCIELabValue not found for one or more segments. The default color was used instead.",type:"warning",duration:5e3});Object.assign(n,I)}({extensionManager:n,servicesManager:t,segDisplaySet:e,headers:a})}catch(t){return e.loading=!1,r(t)}s.createSegmentationForSEGDisplaySet(e).then(()=>{e.loading=!1,o()}).catch(t=>{e.loading=!1,r(t)})}),S[o]}(h,t,n,e),[h]}const p=function(e){const{servicesManager:t,extensionManager:n}=e;return[{name:"dicom-seg",sopClassUids:m,getDisplaySetsFromSeries:e=>u(e,t,n)}]},I={id:"@ohif/seg",name:"Segmentations",protocolMatchingRules:[],toolGroupIds:["default"],numberOfPriorsReferenced:0,defaultViewport:{viewportOptions:{viewportType:"stack",toolGroupId:"default",allowUnmatchedView:!0,syncGroups:[{type:"hydrateseg",id:"sameFORId",source:!0,target:!0}]},displaySets:[{id:"segDisplaySetId",matchedDisplaySetsIndex:-1}]},displaySetSelectors:{segDisplaySetId:{seriesMatchingRules:[{attribute:"Modality",constraint:{equals:"SEG"}}]}},stages:[{name:"Segmentations",viewportStructure:{layoutType:"grid",properties:{rows:1,columns:1}},viewports:[{viewportOptions:{allowUnmatchedView:!0,syncGroups:[{type:"hydrateseg",id:"sameFORId",source:!0,target:!0}]},displaySets:[{id:"segDisplaySetId"}]}]}]};const y=function(){return[{name:I.id,protocol:I}]};var D=n(8420),v=n(96357);const{datasetToBlob:f}=g.Ay.data,{Cornerstone3D:{Segmentation:{generateSegmentation:w}}}=l.ql,{Cornerstone3D:{RTSS:{generateRTSSFromSegmentations:b}}}=l.f_,{vk:h}=l._$,T=({servicesManager:e,extensionManager:t})=>{const{segmentationService:n,displaySetService:a,viewportGridService:o,toolGroupService:s}=e.services,i={loadSegmentationsForViewport:async({segmentations:e,viewportId:t})=>{const s=(({viewportId:e,viewportGridService:t})=>{const{viewports:n,activeViewportId:a}=t.getState(),o=e||a;return n.get(o)})({viewportId:t,viewportGridService:o}),r=s.displaySetInstanceUIDs[0],i=e[0],c=i.segmentationId,d=i.config.label,l=i.config.segments,g=a.getDisplaySetByUID(r);return await n.createLabelmapForDisplaySet(g,{segmentationId:c,segments:l,label:d}),n.addOrUpdateSegmentation(i),await n.addSegmentationRepresentation(s.viewportId,{segmentationId:c}),c},generateSegmentation:({segmentationId:e,options:t={}})=>{const a=d.segmentation.state.getSegmentation(e),{imageIds:o}=a.representationData.Labelmap,s=o.map(e=>c.cache.getImage(e)),r=s.map(e=>c.cache.getImage(e.referencedImageId)),i=[];let l=0;for(const e of s){const t=new Set,n=e.getPixelData(),{rows:a,columns:o}=e;for(let e=0;e<n.length;e++){const a=n[e];0!==a&&t.add(a)}i[l++]={segmentsOnLabelmap:Array.from(t),pixelData:n,rows:a,columns:o}}const m=i.map(e=>e.segmentsOnLabelmap),S={segmentsOnLabelmap:Array.from(new Set(m.flat())),metadata:[],labelmaps2D:i},u=n.getSegmentation(e),p=n.getRepresentationsForSegmentation(e);Object.entries(u.segments).forEach(([t,a])=>{if(!a)return;const{label:o}=a,s=p[0],r=n.getSegmentColor(s.viewportId,e,a.segmentIndex),i=g.Ay.data.Colors.rgb2DICOMLAB(r.slice(0,3).map(e=>e/255)).map(e=>Math.round(e)),c={SegmentNumber:t.toString(),SegmentLabel:o,SegmentAlgorithmType:a?.algorithmType||"MANUAL",SegmentAlgorithmName:a?.algorithmName||"OHIF Brush",RecommendedDisplayCIELabValue:i,SegmentedPropertyCategoryCodeSequence:{CodeValue:"T-D0050",CodingSchemeDesignator:"SRT",CodeMeaning:"Tissue"},SegmentedPropertyTypeCodeSequence:{CodeValue:"T-D0050",CodingSchemeDesignator:"SRT",CodeMeaning:"Tissue"}};S.metadata[t]=c});return w(r,S,c.metaData,t)},downloadSegmentation:({segmentationId:e})=>{const t=n.getSegmentation(e),a=i.generateSegmentation({segmentationId:e});h(a.dataset,`${t.label}`)},storeSegmentation:async({segmentationId:a,dataSource:o})=>{const s=n.getSegmentation(a);if(!s)throw new Error("No segmentation found");const{label:c}=s,d=o??t.getActiveDataSource()[0],{value:l,dataSourceName:g,action:m}=await(0,D.createReportDialogPrompt)({servicesManager:e,extensionManager:t,title:"Store Segmentation"});if(m===v.A.CREATE_REPORT)try{const e=g?t.getDataSources(g)[0]:d,n=i.generateSegmentation({segmentationId:a,options:{SeriesDescription:l||c||"Research Derived Series"}});if(!n||!n.dataset)throw new Error("Error during segmentation generation");const{dataset:o}=n;return"No Study ID"===o.StudyID&&(o.StudyID=""),await e.store.dicom(o),o.wadoRoot=e.getConfig().wadoRoot,r.H8.addInstances([o],!0),o}catch(e){throw console.debug("Error storing segmentation:",e),e}},downloadRTSS:async({segmentationId:e})=>{const t=n.getSegmentation(e),a=n.getRepresentationsForSegmentation(e)[0];Object.entries(t.segments).forEach(([t,o])=>{o.color=n.getSegmentColor(a.viewportId,e,t)});const o=await b(t,r.Ly.MetadataProvider,r.H8);try{const e=f(o),t=URL.createObjectURL(e);window.location.assign(t)}catch(e){console.warn(e)}}},l={loadSegmentationsForViewport:{commandFn:i.loadSegmentationsForViewport},generateSegmentation:{commandFn:i.generateSegmentation},downloadSegmentation:{commandFn:i.downloadSegmentation},storeSegmentation:{commandFn:i.storeSegmentation},downloadRTSS:{commandFn:i.downloadRTSS}};return{actions:i,definitions:l,defaultContext:"SEGMENTATION"}};function R(){return R=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},R.apply(null,arguments)}const M=s.lazy(()=>Promise.all([n.e(7431),n.e(3547),n.e(8740)]).then(n.bind(n,69845))),U=e=>s.createElement(s.Suspense,{fallback:s.createElement("div",null,"Loading...")},s.createElement(M,e)),E={id:a,getCommandsModule:T,getToolbarModule:function({servicesManager:e}){const{segmentationService:t,toolbarService:n,toolGroupService:a}=e.services;return[{name:"evaluate.cornerstone.hasSegmentation",evaluate:({viewportId:e})=>{const n=t.getSegmentationRepresentations(e);return{disabled:!n?.length}}},{name:"evaluate.cornerstone.segmentation",evaluate:({viewportId:e,button:o,toolNames:s,disabledText:r})=>{const i=t.getSegmentationRepresentations(e);if(!i?.length)return{disabled:!0,disabledText:r??"No segmentations available"};const c=t.getActiveSegmentation(e);if(!Object.keys(c.segments).length)return{disabled:!0,disabledText:"Add segment to enable this tool"};const d=a.getToolGroupForViewport(e);if(!d)return{disabled:!0,disabledText:r??"Not available on the current viewport"};if(!s)return{disabled:!1};const l=n.getToolNameForButton(o);if(!d.hasTool(l)&&!s)return{disabled:!0,disabledText:r??"Not available on the current viewport"};return{disabled:!1,isActive:s?s.includes(d.getActivePrimaryMouseButtonTool()):d.getActivePrimaryMouseButtonTool()===l}}}]},getViewportModule:({servicesManager:e,extensionManager:t,commandsManager:n})=>[{name:"dicom-seg",component:a=>s.createElement(U,R({servicesManager:e,extensionManager:t,commandsManager:n},a))}],getSopClassHandlerModule:p,getHangingProtocolModule:y}}}]);
//# sourceMappingURL=7197.bundle.7c8fad54d27c5aa48893.js.map